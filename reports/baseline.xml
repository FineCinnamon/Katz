<?xml version="1.0" ?>
<SmellBaseline>
  <Blacklist timestamp="1490879306930"></Blacklist>
  <Whitelist timestamp="1503248886832">
    <ID>LabeledExpression:FunctionK.kt$&lt;no name provided&gt;$this@or</ID>
    <ID>LabeledExpression:PartialFunction.kt$&lt;no name provided&gt;$this@orElse</ID>
    <ID>LabeledExpression:PartialFunction.kt$&lt;no name provided&gt;$this@orElse</ID>
    <ID>LabeledExpression:PartialFunction.kt$&lt;no name provided&gt;$this@orElse</ID>
    <ID>LabeledExpression:PartialFunction.kt$&lt;no name provided&gt;$this@andThen</ID>
    <ID>LabeledExpression:PartialFunction.kt$&lt;no name provided&gt;$this@andThen</ID>
    <ID>LabeledExpression:Eval.kt$Eval.&lt;no name provided&gt;$this@Eval</ID>
    <ID>LabeledExpression:Eval.kt$Eval.&lt;no name provided&gt;.&lt;no name provided&gt;$this@Eval</ID>
    <ID>LabeledExpression:Eval.kt$Eval.&lt;no name provided&gt;$this@Eval</ID>
    <ID>LabeledExpression:Eval.kt$Eval.&lt;no name provided&gt;$this@Eval</ID>
    <ID>LabeledExpression:Eval.kt$Eval.Compute$break@loop</ID>
    <ID>LabeledExpression:Eval.kt$Eval.Compute$loop@ while (true) { when (curr) { is Compute -&gt; { val currComp: Compute&lt;A&gt; = curr currComp.start&lt;A&gt;().let { cc -&gt; when (cc) { is Compute -&gt; { val inStartFun: (Any?) -&gt; Eval&lt;A&gt; = { cc.run(it) } val outStartFun: (Any?) -&gt; Eval&lt;A&gt; = { currComp.run(it) } curr = cc.start&lt;A&gt;() fs = listOf(inStartFun, outStartFun) + fs } else -&gt; { curr = currComp.run(cc.value()) } } } } else -&gt; if (fs.isNotEmpty()) { curr = fs[0](curr.value()) fs = fs.drop(1) } else { break@loop } } }</ID>
    <ID>LabeledExpression:Yoneda.kt$Yoneda.&lt;no name provided&gt;$this@Yoneda</ID>
    <ID>LabeledExpression:ContinuationUtils.kt$this@label</ID>
    <ID>LabeledExpression:ContinuationUtils.kt$this@completion</ID>
    <ID>LabeledExpression:MonoidK.kt$MonoidK.&lt;no name provided&gt;$this@MonoidK</ID>
    <ID>LabeledExpression:MonoidK.kt$MonoidK.&lt;no name provided&gt;$this@MonoidK</ID>
    <ID>ComplexMethod:AndThen.kt$AndThen$ @Suppress("UNCHECKED_CAST") internal fun runLoop(_success: A?, _failure: Throwable?, _isSuccess: Boolean): B</ID>
    <ID>EmptyClassBlock:Typeclass.kt$&lt;no name provided&gt; : TypeLiteral</ID>
    <ID>OptionalUnit:FreeApplicative.kt$FreeApplicative$Unit</ID>
    <ID>OptionalUnit:Typeclass.kt$GlobalInstance$Unit</ID>
    <ID>OptionalUnit:AndThen.kt$AndThen$Unit</ID>
    <ID>OptionalUnit:AndThen.kt$AndThen$Unit</ID>
    <ID>OptionalUnit:IO.kt$IO$Unit</ID>
    <ID>LateinitUsage:Comonad.kt$ComonadContinuation$internal lateinit var returnedMonad: A</ID>
    <ID>LateinitUsage:Monad.kt$MonadContinuation$protected lateinit var returnedMonad: HK&lt;F, A&gt;</ID>
    <ID>LateinitUsage:Monad.kt$StackSafeMonadContinuation$protected lateinit var returnedMonad: Free&lt;F, A&gt;</ID>
    <ID>UnsafeCallOnNullableType:AndThen.kt$AndThen$failure!!</ID>
    <ID>UnsafeCallOnNullableType:AndThen.kt$AndThen$failure!!</ID>
    <ID>MaxLineLength:Kleisli.kt$kategory.Kleisli.kt</ID>
    <ID>MaxLineLength:Composed.kt$kategory.Composed.kt</ID>
    <ID>MaxLineLength:Composed.kt$kategory.Composed.kt</ID>
    <ID>MaxLineLength:Composed.kt$kategory.Composed.kt</ID>
    <ID>MaxLineLength:Composed.kt$kategory.Composed.kt</ID>
    <ID>MaxLineLength:Composed.kt$kategory.Composed.kt</ID>
    <ID>MaxLineLength:Composed.kt$kategory.Composed.kt</ID>
    <ID>MaxLineLength:Composed.kt$kategory.Composed.kt</ID>
    <ID>MaxLineLength:Composed.kt$kategory.Composed.kt</ID>
    <ID>MaxLineLength:Composed.kt$kategory.Composed.kt</ID>
    <ID>MaxLineLength:Composed.kt$kategory.Composed.kt</ID>
    <ID>MaxLineLength:Coproduct.kt$kategory.Coproduct.kt</ID>
    <ID>MaxLineLength:Coproduct.kt$kategory.Coproduct.kt</ID>
    <ID>MaxLineLength:Coproduct.kt$kategory.Coproduct.kt</ID>
    <ID>MaxLineLength:Coproduct.kt$kategory.Coproduct.kt</ID>
    <ID>MaxLineLength:Either.kt$kategory.Either.kt</ID>
    <ID>MaxLineLength:EitherT.kt$kategory.EitherT.kt</ID>
    <ID>MaxLineLength:EitherT.kt$kategory.EitherT.kt</ID>
    <ID>MaxLineLength:OptionT.kt$kategory.OptionT.kt</ID>
    <ID>MaxLineLength:OptionT.kt$kategory.OptionT.kt</ID>
    <ID>MaxLineLength:OptionT.kt$kategory.OptionT.kt</ID>
    <ID>MaxLineLength:WriterT.kt$kategory.WriterT.kt</ID>
    <ID>MaxLineLength:WriterT.kt$kategory.WriterT.kt</ID>
    <ID>MaxLineLength:WriterT.kt$kategory.WriterT.kt</ID>
    <ID>MaxLineLength:WriterT.kt$kategory.WriterT.kt</ID>
    <ID>MaxLineLength:WriterT.kt$kategory.WriterT.kt</ID>
    <ID>MaxLineLength:WriterT.kt$kategory.WriterT.kt</ID>
    <ID>MaxLineLength:WriterT.kt$kategory.WriterT.kt</ID>
    <ID>MaxLineLength:WriterT.kt$kategory.WriterT.kt</ID>
    <ID>MaxLineLength:WriterT.kt$kategory.WriterT.kt</ID>
    <ID>MaxLineLength:WriterT.kt$kategory.WriterT.kt</ID>
    <ID>MaxLineLength:WriterT.kt$kategory.WriterT.kt</ID>
    <ID>MaxLineLength:WriterT.kt$kategory.WriterT.kt</ID>
    <ID>MaxLineLength:Free.kt$kategory.Free.kt</ID>
    <ID>MaxLineLength:FreeApplicative.kt$kategory.FreeApplicative.kt</ID>
    <ID>MaxLineLength:FreeApplicative.kt$kategory.FreeApplicative.kt</ID>
    <ID>MaxLineLength:CoproductInstances.kt$kategory.CoproductInstances.kt</ID>
    <ID>MaxLineLength:EitherInstances.kt$kategory.EitherInstances.kt</ID>
    <ID>MaxLineLength:EitherTInstances.kt$kategory.EitherTInstances.kt</ID>
    <ID>MaxLineLength:FreeApplicativeInstances.kt$kategory.FreeApplicativeInstances.kt</ID>
    <ID>MaxLineLength:FreeApplicativeInstances.kt$kategory.FreeApplicativeInstances.kt</ID>
    <ID>MaxLineLength:FreeApplicativeInstances.kt$kategory.FreeApplicativeInstances.kt</ID>
    <ID>MaxLineLength:FreeInstances.kt$kategory.FreeInstances.kt</ID>
    <ID>MaxLineLength:IorInstances.kt$kategory.IorInstances.kt</ID>
    <ID>MaxLineLength:IorInstances.kt$kategory.IorInstances.kt</ID>
    <ID>MaxLineLength:KleisliInstances.kt$kategory.KleisliInstances.kt</ID>
    <ID>MaxLineLength:KleisliInstances.kt$kategory.KleisliInstances.kt</ID>
    <ID>MaxLineLength:KleisliInstances.kt$kategory.KleisliInstances.kt</ID>
    <ID>MaxLineLength:OptionTInstances.kt$kategory.OptionTInstances.kt</ID>
    <ID>MaxLineLength:StateTInstances.kt$kategory.StateTInstances.kt</ID>
    <ID>MaxLineLength:StateTInstances.kt$kategory.StateTInstances.kt</ID>
    <ID>MaxLineLength:StateTInstances.kt$kategory.StateTInstances.kt</ID>
    <ID>MaxLineLength:StateTInstances.kt$kategory.StateTInstances.kt</ID>
    <ID>MaxLineLength:StateTInstances.kt$kategory.StateTInstances.kt</ID>
    <ID>MaxLineLength:TryInstances.kt$kategory.TryInstances.kt</ID>
    <ID>MaxLineLength:TryInstances.kt$kategory.TryInstances.kt</ID>
    <ID>MaxLineLength:ValidatedInstances.kt$kategory.ValidatedInstances.kt</ID>
    <ID>MaxLineLength:Applicative.kt$kategory.Applicative.kt</ID>
    <ID>MaxLineLength:Applicative.kt$kategory.Applicative.kt</ID>
    <ID>MaxLineLength:Applicative.kt$kategory.Applicative.kt</ID>
    <ID>MaxLineLength:Applicative.kt$kategory.Applicative.kt</ID>
    <ID>MaxLineLength:Applicative.kt$kategory.Applicative.kt</ID>
    <ID>MaxLineLength:Applicative.kt$kategory.Applicative.kt</ID>
    <ID>MaxLineLength:Applicative.kt$kategory.Applicative.kt</ID>
    <ID>MaxLineLength:Applicative.kt$kategory.Applicative.kt</ID>
    <ID>MaxLineLength:Applicative.kt$kategory.Applicative.kt</ID>
    <ID>MaxLineLength:Applicative.kt$kategory.Applicative.kt</ID>
    <ID>MaxLineLength:Applicative.kt$kategory.Applicative.kt</ID>
    <ID>MaxLineLength:Applicative.kt$kategory.Applicative.kt</ID>
    <ID>MaxLineLength:Applicative.kt$kategory.Applicative.kt</ID>
    <ID>MaxLineLength:Applicative.kt$kategory.Applicative.kt</ID>
    <ID>MaxLineLength:Applicative.kt$kategory.Applicative.kt</ID>
    <ID>MaxLineLength:Applicative.kt$kategory.Applicative.kt</ID>
    <ID>MaxLineLength:Applicative.kt$kategory.Applicative.kt</ID>
    <ID>MaxLineLength:Applicative.kt$kategory.Applicative.kt</ID>
    <ID>MaxLineLength:Applicative.kt$kategory.Applicative.kt</ID>
    <ID>MaxLineLength:Applicative.kt$kategory.Applicative.kt</ID>
    <ID>MaxLineLength:Applicative.kt$kategory.Applicative.kt</ID>
    <ID>MaxLineLength:Applicative.kt$kategory.Applicative.kt</ID>
    <ID>MaxLineLength:ApplicativeError.kt$kategory.ApplicativeError.kt</ID>
    <ID>MaxLineLength:ApplicativeError.kt$kategory.ApplicativeError.kt</ID>
    <ID>MaxLineLength:Foldable.kt$kategory.Foldable.kt</ID>
    <ID>MaxLineLength:Foldable.kt$kategory.Foldable.kt</ID>
    <ID>MaxLineLength:Foldable.kt$kategory.Foldable.kt</ID>
    <ID>MaxLineLength:Foldable.kt$kategory.Foldable.kt</ID>
    <ID>MaxLineLength:Foldable.kt$kategory.Foldable.kt</ID>
    <ID>MaxLineLength:Monad.kt$kategory.Monad.kt</ID>
    <ID>MaxLineLength:Monad.kt$kategory.Monad.kt</ID>
    <ID>MaxLineLength:Monad.kt$kategory.Monad.kt</ID>
    <ID>MaxLineLength:MonadError.kt$kategory.MonadError.kt</ID>
    <ID>MaxLineLength:MonadReader.kt$kategory.MonadReader.kt</ID>
    <ID>MaxLineLength:MonadState.kt$kategory.MonadState.kt</ID>
    <ID>MaxLineLength:Reducible.kt$kategory.Reducible.kt</ID>
    <ID>MaxLineLength:Reducible.kt$kategory.Reducible.kt</ID>
    <ID>MaxLineLength:Reducible.kt$kategory.Reducible.kt</ID>
    <ID>MaxLineLength:Traverse.kt$kategory.Traverse.kt</ID>
    <ID>MaxLineLength:IO.kt$kategory.IO.kt</ID>
    <ID>MaxLineLength:IO.kt$kategory.IO.kt</ID>
    <ID>MaxLineLength:IOInstances.kt$kategory.IOInstances.kt</ID>
    <ID>MaxLineLength:Async.kt$kategory.Async.kt</ID>
    <ID>MaxLineLength:Async.kt$kategory.Async.kt</ID>
    <ID>MaxLineLength:Async.kt$kategory.Async.kt</ID>
    <ID>MaxLineLength:Async.kt$kategory.Async.kt</ID>
  </Whitelist>
</SmellBaseline>