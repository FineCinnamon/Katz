#font: Menlo
#fontSize: 10
#arrowSize: 1
#bendSize: 0.3
#lineWidth: 2
#padding: 8
#zoom: 1
#fill: #64B5F6
#.typeclasses: fill=#64B5F6 visual=database bold
#.instances: fill=#B9F6CA visual=class italic bold dashed
[<typeclasses>Semigroup]<-[<typeclasses>Monoid]
[<typeclasses>Monad]<-[<typeclasses>Bimonad]
[<typeclasses>Comonad]<-[<typeclasses>Bimonad]
[<typeclasses>Functor]<-[<typeclasses>Comonad]
[<typeclasses>Functor]<-[<typeclasses>Traverse]
[<typeclasses>Foldable]<-[<typeclasses>Traverse]
[<typeclasses>Applicative]<-[<typeclasses>ApplicativeError]
[<typeclasses>Functor]<-[<typeclasses>Applicative]
[<typeclasses>ApplicativeError]<-[<typeclasses>MonadError]
[<typeclasses>Monad]<-[<typeclasses>MonadError]
[<typeclasses>Applicative]<-[<typeclasses>Monad]
[<typeclasses>SemigroupK]<-[<typeclasses>MonoidK]
[<typeclasses>MonadError]<-[<typeclasses>MonadDefer]
[<typeclasses>MonadDefer]<-[<typeclasses>Async]
[<typeclasses>Async]<-[<typeclasses>Effect]
[<typeclasses>Monad]<-[<typeclasses>MonadState]
[<typeclasses>Monad]<-[<typeclasses>MonadReader]
[<typeclasses>MonadFilter]<-[<typeclasses>MonadCombine]
[<typeclasses>Alternative]<-[<typeclasses>MonadCombine]
[<typeclasses>Monad]<-[<typeclasses>MonadFilter]
[<typeclasses>FunctorFilter]<-[<typeclasses>MonadFilter]
[<typeclasses>Functor]<-[<typeclasses>FunctorFilter]
[<typeclasses>Traverse]<-[<typeclasses>TraverseFilter]
[<typeclasses>FunctorFilter]<-[<typeclasses>TraverseFilter]
[<typeclasses>Monad]<-[<typeclasses>MonadWriter]
[<typeclasses>Recursive]<-[<typeclasses>Birecursive]
[<typeclasses>Corecursive]<-[<typeclasses>Birecursive]
[<typeclasses>MonadDefer]<-[<instances>MonadDefer Instances|IOMonadDeferInstance|DeferredKMonadDeferInstance|FlowableKMonadDeferInstance|ObservableKMonadDeferInstance]
[<typeclasses>Async]<-[<instances>Async Instances|IOAsyncInstance|DeferredKAsyncInstance|FlowableKAsyncInstance|ObservableKAsyncInstance]
[<typeclasses>Effect]<-[<instances>Effect Instances|IOEffectInstance|DeferredKEffectInstance|ObservableKEffectInstance|FlowableKEffectInstance]
[<typeclasses>MonoidK]<-[<instances>MonoidK Instances|WriterTMonoidKInstance|ListKMonoidKInstance|OptionTMonoidKInstance|SetKMonoidKInstance|SequenceKMonoidKInstance]
[<typeclasses>SemigroupK]<-[<instances>SemigroupK Instances|EitherSemigroupKInstance|WriterTSemigroupKInstance|SetKSemigroupKInstance|SequenceKSemigroupKInstance|NonEmptyListSemigroupKInstance|ValidatedSemigroupKInstance|OptionTSemigroupKInstance|ListKSemigroupKInstance|StateTSemigroupKInstance]
[<typeclasses>Bimonad]<-[<instances>Bimonad Instances|EvalBimonadInstance|Function0BimonadInstance|IdBimonadInstance|NonEmptyListBimonadInstance]
[<typeclasses>Eq]<-[<instances>Eq Instances|Tuple6EqInstance|OptionEqInstance|Tuple9EqInstance|Tuple8EqInstance|EitherEqInstance|Tuple7EqInstance|Tuple5EqInstance|ConstEqInstance|Tuple2EqInstance|Tuple3EqInstance|Tuple4EqInstance|IdEqInstance|Tuple10EqInstance|TryEqInstance|IorEqInstance|SetKEqInstance|NonEmptyListEqInstance|ValidatedEqInstance|SequenceKEqInstance|MapKEqInstance|ListKEqInstance]
[<typeclasses>Show]<-[<instances>Show Instances|OptionShowInstance|EitherShowInstance|Tuple4ShowInstance|TryShowInstance|IdShowInstance|Tuple5ShowInstance|Tuple9ShowInstance|Tuple10ShowInstance|Tuple2ShowInstance|Tuple6ShowInstance|Tuple8ShowInstance|ConstShowInstance|Tuple3ShowInstance|Tuple7ShowInstance|SetKShowInstance|ListKShowInstance|SortedMapKShowInstance|IorShowInstance|ValidatedShowInstance|NonEmptyListShowInstance|SequenceKShowInstance|MapKShowInstance]
[<typeclasses>Traverse]<-[<instances>Traverse Instances|OptionTraverseInstance|ConstTraverseInstance|TryTraverseInstance|IdTraverseInstance|Tuple2TraverseInstance|EitherTraverseInstance|ListKTraverseInstance|ValidatedTraverseInstance|OptionTTraverseInstance|MapKTraverseInstance|NonEmptyListTraverseInstance|CoproductTraverseInstance|SequenceKTraverseInstance|SortedMapKTraverseInstance|IorTraverseInstance|FlowableKTraverseInstance|ObservableKTraverseInstance]
[<typeclasses>Foldable]<-[<instances>Foldable Instances|IdFoldableInstance|EitherFoldableInstance|Tuple2FoldableInstance|OptionFoldableInstance|TryFoldableInstance|ConstFoldableInstance|SortedMapKFoldableInstance|SequenceKFoldableInstance|NonEmptyListFoldableInstance|CoproductFoldableInstance|IorFoldableInstance|SetKFoldableInstance|OptionTFoldableInstance|ListKFoldableInstance|ValidatedFoldableInstance|MapKFoldableInstance|ObservableKFoldableInstance|FlowableKFoldableInstance]
[<typeclasses>Monoid]<-[<instances>Monoid Instances|OptionMonoidInstance|ConstMonoidInstance|Tuple2MonoidInstance|ListKMonoidInstance|SequenceKMonoidInstance|MapKMonoidInstance|SetKMonoidInstance|SortedMapKMonoidInstance|IOMonoidInstance]
[<typeclasses>Semigroup]<-[<instances>Semigroup Instances|ConstSemigroupInstance|OptionSemigroupInstance|SetKSemigroupInstance|NonEmptyListSemigroupInstance|SequenceKSemigroupInstance|ListKSemigroupInstance|MapKSemigroupInstance|SortedMapKSemigroupInstance|IOMonoidInstance|IOSemigroupInstance]
[<typeclasses>ApplicativeError]<-[<instances>ApplicativeError Instances|EitherApplicativeErrorInstance|TryApplicativeErrorInstance|OptionApplicativeErrorInstance|ValidatedApplicativeErrorInstance|StateTApplicativeErrorInstance|KleisliApplicativeErrorInstance|IOApplicativeErrorInstance|DeferredKApplicativeErrorInstance|ObservableKApplicativeErrorInstance|FlowableKApplicativeErrorInstance]
[<typeclasses>MonadError]<-[<instances>MonadError Instances|EitherMonadErrorInstance|TryMonadErrorInstance|OptionMonadErrorInstance|KleisliMonadErrorInstance|StateTMonadErrorInstance|IOMonadErrorInstance|DeferredKMonadErrorInstance|FlowableKMonadErrorInstance|ObservableKMonadErrorInstance]
[<typeclasses>Comonad]<-[<instances>Comonad Instances|Tuple2ComonadInstance|Function0ComonadInstance|IdComonadInstance|EvalComonadInstance|NonEmptyListComonadInstance|CoproductComonadInstance|CofreeComonadInstance]
[<typeclasses>Functor]<-[<instances>Functor Instances|Function1FunctorInstance|Tuple2FunctorInstance|ConstFunctorInstance|Function0FunctorInstance|EitherFunctorInstance|IdFunctorInstance|OptionFunctorInstance|EvalFunctorInstance|TryFunctorInstance|NonEmptyListFunctorInstance|IorFunctorInstance|CoproductFunctorInstance|KleisliFunctorInstance|SequenceKFunctorInstance|MapKFunctorInstance|StateTFunctorInstance|SortedMapKFunctorInstance|WriterTFunctorInstance|ListKFunctorInstance|OptionTFunctorInstance|ValidatedFunctorInstance|IOFunctorInstance|CofreeFunctorInstance|FreeApplicativeFunctorInstance|CoyonedaFunctorInstance|FreeFunctorInstance|YonedaFunctorInstance|DeferredKFunctorInstance|FlowableKFunctorInstance|ObservableKFunctorInstance]
[<typeclasses>Applicative]<-[<instances>Applicative Instances|Tuple2ApplicativeInstance|Function1ApplicativeInstance|EvalApplicativeInstance|EitherApplicativeInstance|OptionApplicativeInstance|IdApplicativeInstance|TryApplicativeInstance|ConstApplicativeInstance|Function0ApplicativeInstance|IorApplicativeInstance|StateTApplicativeInstance|OptionTApplicativeInstance|ListKApplicativeInstance|WriterTApplicativeInstance|SequenceKApplicativeInstance|NonEmptyListApplicativeInstance|ValidatedApplicativeInstance|KleisliApplicativeInstance|IOApplicativeInstance|FreeApplicativeInstance|FreeApplicativeApplicativeInstance|DeferredKApplicativeInstance|FlowableKApplicativeInstance|ObservableKApplicativeInstance]
[<typeclasses>Monad]<-[<instances>Monad Instances|TryMonadInstance|IdMonadInstance|OptionMonadInstance|EvalMonadInstance|EitherMonadInstance|Tuple2MonadInstance|Function0MonadInstance|Function1MonadInstance|KleisliMonadInstance|OptionTMonadInstance|WriterTMonadInstance|ListKMonadInstance|StateTMonadInstance|IorMonadInstance|NonEmptyListMonadInstance|SequenceKMonadInstance|IOMonadInstance|FreeMonadInstance|DeferredKMonadInstance|ObservableKMonadInstance|FlowableKMonadInstance]
[<typeclasses>MonadState]<-[<instances>MonadState Instances|StateTMonadStateInstance]
[<typeclasses>MonadReader]<-[<instances>MonadReader Instances|KleisliMonadReaderInstance|Function1MonadReaderInstance]
[<typeclasses>MonadCombine]<-[<instances>MonadCombine Instances|StateTMonadCombineInstance|ListKMonadCombineInstance]
[<typeclasses>MonadFilter]<-[<instances>MonadFilter Instances|OptionMonadFilterInstance|ListKMonadFilterInstance|WriterTMonadFilterInstance]
[<typeclasses>FunctorFilter]<-[<instances>FunctorFilter Instances|ListKFunctorFilterInstance|OptionTFunctorFilterInstance]
[<typeclasses>TraverseFilter]<-[<instances>TraverseFilter Instances|OptionTraverseFilterInstance|ConstTraverseFilterInstance|OptionTTraverseFilterInstance]
[<typeclasses>MonadWriter]<-[<instances>MonadWriter Instances|WriterTMonadWriterInstance]
[<typeclasses>FilterIndex]<-[<instances>FilterIndex Instances|SequenceKFilterIndexInstance|MapKFilterIndexInstance|ListKFilterIndexInstance|NonEmptyListFilterIndexInstance]
[<typeclasses>Index]<-[<instances>Index Instances|MapKIndexInstance|SequenceKIndexInstance|NonEmptyListIndexInstance|ListKIndexInstance|ListKFilterIndexInstance|MapKFilterIndexInstance|NonEmptyListFilterIndexInstance|SequenceKFilterIndexInstance]
[<typeclasses>At]<-[<instances>At Instances|MapKAtInstance|SetKAtInstance]
[<typeclasses>Each]<-[<instances>Each Instances|ListKEachInstance|OptionEachInstance|EitherEachInstance|TryEachInstance|SequenceKEachInstance|NonEmptyListEachInstance|MapKEachInstance]
[<typeclasses>Corecursive]<-[<instances>Corecursive Instances|FixCorecursiveInstance|MuCorecursiveInstance|NuCorecursiveInstance]
[<typeclasses>Recursive]<-[<instances>Recursive Instances|FixRecursiveInstance|MuRecursiveInstance|NuRecursiveInstance]
[<typeclasses>Birecursive]<-[<instances>Birecursive Instances|FixInstances|FixBirecursiveInstance|MuBirecursiveInstance|NuBirecursiveInstance]