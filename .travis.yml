language: kotlin
sudo: required
dist: trusty

jdk:
- oraclejdk8

stages:
- build-and-dokka
- build-and-dokka-transfer
- coverage-report
- deploy
- deploy-docs

env:
  global:
  # include $HOME/.local/bin for `aws`
  - PATH=$HOME/.local/bin:$PATH

before_install:
- pip install --user awscli
- mkdir -p ~/site

jobs:
  include:
  - stage: build-and-dokka
   script:
   if: branch != master OR type = pull_request
   # redirecting outputs to files to avoid exceeding travis' logs limit
   - ./gradlew clean build > build.log
   - ./gradlew dokka :arrow-docs:runAnk > run_ank.log
  - stage: build-and-dokka-transfer
   script:
   if: branch = master AND type != pull_request
   # redirecting outputs to files to avoid exceeding travis' logs limit
   - ./gradlew clean build > build.log
   - ./gradlew dokka :arrow-docs:runAnk > run_ank.log
   - aws s3 sync modules/docs/arrow-docs/build/site s3://$S3_BUCKET/site > aws_sync_dokka.log
    if: branch = master
    script:
    - ./gradlew codeCoverageReport
    - bash <(curl -s https://codecov.io/bash)
  - stage: deploy
    if: branch = master AND type != pull_request
    script:
    - ./deploy-scripts/deploy.sh
  - stage: deploy-docs
    if: branch = master AND type != pull_request
    script:
    - rvm use 2.5.3 --install --fuzzy
    - gem install jekyll -v 3.7.4
    - aws s3 sync s3://$S3_BUCKET/site ~/site > aws_sync_jekyll.log
    - jekyll build -s ~/site -d ~/_site
    - aws s3 sync ~/_site s3://$S3_BUCKET > aws_sync_site.log
